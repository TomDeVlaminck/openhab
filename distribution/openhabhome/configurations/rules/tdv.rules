import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

// Scenario button test
rule "Scenario living read lights"
when
	Item Light_GF_Living_69_BTN1 received update
then
	if(Light_GF_Living_69_BTN1.state==ON)
	{
		if (Light_GF_Living_4x_LED.state==OFF)
			sendCommand(Light_GF_Living_4x_LED, ON)
		else
			sendCommand(Light_GF_Living_4x_LED, OFF)
	}
end

// Notify My Android test
rule "Scenario detection corridor"
when
	Item Light_GF_Corridor_Ceiling received update
then
	if(Light_GF_Corridor_Ceiling.state==ON)
	{
		notifyMyAndroid("Movement detected", "Licht in de gang is aan als gevolg van IR detectie")
		//sendMail("tom_de_vlaminck@hotmail.com", "Movement detected", "Licht in de gang is aan als gevolg van IR detectie")
	}
end

// Doorbel mail & notify
rule "Doorbel handler"
when
	Item Light_DOORBEL_98_BTN1 received update
then
	if(Light_DOORBEL_98_BTN1.state==ON)
	{
		notifyMyAndroid("Doorbel", "Deurbelknop ingedrukt - sending image")
		sendMail("devlaminck.tom@gmail.com", "OpenHAB Deurbel", "Deurbel ingedrukt", "http://10.0.6.11/lastsnap.jpg")
		sendMail("els.carnol@gmail.com", "OpenHAB Deurbel", "Deurbel ingedrukt", "http://10.0.6.11/lastsnap.jpg")		
	}
end

rule "Scenario living read kachel"
when
	Item Light_GF_Living_69_BTN3 received update
then
	if(Light_GF_Living_69_BTN3.state==ON)
	{
		if (Light_GF_Living_VENT_1.state==OFF)
		{
			sendCommand(Light_GF_Living_VENT_1, ON)
		}		
		else
		{
			if (Light_GF_Living_VENT_2.state==OFF)
				sendCommand(Light_GF_Living_VENT_2, ON)
			else
			{
				if (Light_GF_Living_VENT_3.state==OFF)
					sendCommand(Light_GF_Living_VENT_3, ON)
				else
				{
		    		sendCommand(Light_GF_Living_VENT_1, OFF)
					sendCommand(Light_GF_Living_VENT_2, OFF)
					sendCommand(Light_GF_Living_VENT_3, OFF)
				}
			}
		}		
	}
end
